package interface_1;

import java.awt.Color;
import java.awt.Font;
import java.awt.Paint;
import java.awt.PaintContext;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.geom.AffineTransform;
import java.awt.geom.Rectangle2D;
import java.awt.image.ColorModel;
import java.text.DecimalFormat;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;

public class CalcTest implements ActionListener {
	private JFrame jf;
	private JButton[] jb;
	private JLabel[] jl;
	
	private StringBuffer inputBuf;
	private StringBuffer dispBuf;
	private int cnt;
	private int sym_cnt;
	private double result;
	private int op;
	
	public CalcTest(){
		jf = new JFrame();
		jb = new JButton[18];
		jl = new JLabel[2];
		inputBuf = new StringBuffer("0");
		dispBuf = new StringBuffer();
		int x=10; int y=140;
		
		jf.setLayout(null);
		Font font = new Font("글씨체", Font.CENTER_BASELINE, 15);
		
		for(int i =0;i<jl.length;i++) { // JLabel
			if(i==0) { jl[i] = new JLabel("");jl[i].setBounds(10,10,265,30);}
			else { jl[i] = new JLabel("0"); jl[i].setBounds(10,50,265,30);}
			jl[i].setOpaque(true);
			jl[i].setBackground(Color.lightGray);
			jl[i].setFont(font);
			jl[i].setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
			
			jf.add(jl[i]);
		}
		
		String[] title = {"7","8","9","/","4","5","6","*","1","2","3","-",".","0","=","+","BackSpace","C"};
		for(int i=1;i<jb.length+1;i++) {
			jb[i-1] = new JButton();
			jb[i-1].setText(title[i-1]);
			if(i-1<16) {
				jb[i-1].setBounds(x,y,59,59); // 10 150
				x+=69;
				if(i%4==0) {
					y+=69;
					x=10;
				}
			}else {
				if(i-1 == 16)	jb[i-1].setBounds(10,90,125,40);
				else jb[i-1].setBounds(150,90,125,40);
				// 10,150,40,40
			} 
			jf.add(jb[i-1]);
		}

		jf.setTitle("계산기2");
		jf.setBounds(700,500,289,445);
		jf.setResizable(false);
		
		jf.setVisible(true);
		
		jf.addWindowListener(new WindowAdapter() { // x버튼 종료
			@Override
			public void windowClosing(WindowEvent e) {
				System.exit(0);
			}
		});
		
		//////////////////////
		for(int i = 0; i<jb.length;i++) {
			jb[i].addActionListener(this);
		}
		
	}
	

	@Override
	public void actionPerformed(ActionEvent e) {
		DecimalFormat df = new DecimalFormat();
			//앞에값이 입력됬을때
		
		for(int i = 0; i<10; i++) {
			
			if(e.getActionCommand().equals(i+"")) {
				System.out.println("bb");
				
					if(inputBuf.toString().equals("0")) {
						inputBuf.delete(0, 1);
					}
					inputBuf.append(i+"");
					jl[1].setText(inputBuf.toString());
					cnt++;
					sym_cnt=0;
					return;
				}
			}
		
		
		if(e.getActionCommand()=="C") { // 초기화
			inputBuf.delete(0, inputBuf.length());
			dispBuf.delete(0, inputBuf.length());
			inputBuf.append("0");
			
			jl[0].setText("");
			jl[1].setText(inputBuf.toString());
			cnt = 0;
			sym_cnt = 0;
			
		}else if(e.getActionCommand()=="BackSpace"){ // 백스페이스
			inputBuf.delete(inputBuf.length()-1, inputBuf.length());
			if(inputBuf.length() == 0) inputBuf.append("0");
			jl[1].setText(inputBuf.toString());
			
		}else if(e.getActionCommand()==".") { // 소수점
			if(inputBuf.indexOf(".") == -1) { // 소수점이 있으면
				inputBuf.append(".");
				jl[1].setText(inputBuf.toString());
			}
			cnt++;
		}else if(e.getActionCommand()=="+") { // 여기부터 연산자  +  더하기
			
			if(op == 0) {
				result = Double.parseDouble(inputBuf.toString());
				dispBuf.append(inputBuf.toString()+"+");
				jl[0].setText(dispBuf.toString());
				jl[1].setText(inputBuf.toString());
				op = '+';
				inputBuf.delete(0, inputBuf.length());
			}else {
				result = result+Double.parseDouble(inputBuf.toString());
				dispBuf.append(inputBuf.toString()+"+");
				jl[0].setText(dispBuf.toString());
				jl[1].setText(result+"");
				op = '+';
				inputBuf.delete(0, inputBuf.length());
		}
		}else if(e.getActionCommand()=="-") { // 여기부터 연산자  -  빼기
			
			if(op == 0) {
				result = Double.parseDouble(inputBuf.toString());
				dispBuf.append(inputBuf.toString()+"-");
				jl[0].setText(dispBuf.toString());
				jl[1].setText(inputBuf.toString());
				op = '-';
				inputBuf.delete(0, inputBuf.length());
			}else {
				result = result-Double.parseDouble(inputBuf.toString());
				dispBuf.append(inputBuf.toString()+"-");
				jl[0].setText(dispBuf.toString());
				jl[1].setText(result+"");
				op = '-';
				inputBuf.delete(0, inputBuf.length());
			}
			}
		}else if(e.getActionCommand()=="/") { // 여기부터 연산자  /  나누기
			
			if(op == 0) {
				result = Double.parseDouble(inputBuf.toString());
				dispBuf.append(inputBuf.toString()+"/");
				jl[0].setText(dispBuf.toString());
				jl[1].setText(inputBuf.toString());
				op = '/';
				inputBuf.delete(0, inputBuf.length());
			}else {
				if(dispBuf.toString().charAt(dispBuf.length()-1) == '+' || dispBuf.toString().charAt(dispBuf.length()-1) == '-' ||
				   dispBuf.toString().charAt(dispBuf.length()-1) == '/' || dispBuf.toString().charAt(dispBuf.length()-1) == '*' 	) {
					dispBuf.delete(dispBuf.length()-1, dispBuf.length());
					dispBuf.append("/");
					jl[0].setText(dispBuf.toString());
					op = '/';
				}else {
					result = result/Double.parseDouble(inputBuf.toString());
					dispBuf.append(inputBuf.toString()+"/");
					jl[0].setText(dispBuf.toString());
					jl[1].setText(result+"");
					op = '/';
					inputBuf.delete(0, inputBuf.length());
				}
			}
		}else if(e.getActionCommand()=="*") { // 여기부터 연산자  *  곱하기
			
			if(op == 0) {
				result = Double.parseDouble(inputBuf.toString());
				dispBuf.append(inputBuf.toString()+"*");
				jl[0].setText(dispBuf.toString());
				jl[1].setText(inputBuf.toString());
				op = '*';
				inputBuf.delete(0, inputBuf.length());
			}else {
				if(dispBuf.toString().charAt(dispBuf.length()-1) == '+' || dispBuf.toString().charAt(dispBuf.length()-1) == '-' ||
				   dispBuf.toString().charAt(dispBuf.length()-1) == '/' || dispBuf.toString().charAt(dispBuf.length()-1) == '*' 	) {
					dispBuf.delete(dispBuf.length()-1, dispBuf.length());
					dispBuf.append("*");
					jl[0].setText(dispBuf.toString());
					op = '*';
				}else {
					result = result*Double.parseDouble(inputBuf.toString());
					dispBuf.append(inputBuf.toString()+"*");
					jl[0].setText(dispBuf.toString());
					jl[1].setText(result+"");
					op = '*';
					inputBuf.delete(0, inputBuf.length());
				}
			}
		}else if(e.getActionCommand()=="=") {
			dispBuf.append(inputBuf.toString()+"=");
			jl[0].setText(dispBuf.toString());
			jl[1].setText(inputBuf.toString());
		}
		
	}
	
	public static void main(String[] args) {
		new CalcTest();
	}

}
